{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","list","setList","input","setInput","className","onSubmit","event","preventDefault","type","placeholder","onChange","target","value","map","item","i","onClick","tempArr","splice","handleDelete","handleEdit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAyDeA,EAtDH,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAETC,EAFS,KAEHC,EAFG,OAGUF,mBAAS,IAHnB,mBAGTG,EAHS,KAGFC,EAHE,KA4BhB,OACE,sBAAKC,UAAU,MAAf,UAEE,sBAAMA,UAAU,gBAAgBC,SAzBf,SAACC,GACpBA,EAAMC,iBACNN,EAAQ,GAAD,mBAAKD,GAAL,CAAWE,KAClBC,EAAS,KAsBP,SACE,uBAAOC,UAAU,UAAUI,KAAK,OAAOC,YAAY,wBAAwBC,SAAU,SAACJ,GAAD,OAAWH,EAASG,EAAMK,OAAOC,QAAQA,MAAOV,MAGtIF,EAAKa,KAAI,SAACC,EAAMC,GAAP,OACR,sBAAKX,UAAU,eAAf,UACE,4BAAIU,IACJ,wBAAQE,QAAS,kBA1BJ,SAACD,GACpB,IAAIE,EAAO,YAAOjB,GAClBiB,EAAQC,OAAOH,EAAG,GAClBd,EAAQgB,GAuBqBE,CAAaJ,IAApC,oBACA,wBAAQC,QAAS,kBArBN,SAACD,GAClB,IAAIE,EAAO,YAAOjB,GAClBiB,EAAQF,GAAKb,EACbD,EAAQgB,GACRd,EAAS,IAiBoBiB,CAAWL,IAAlC,4BC9BKM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51e69ea3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\")\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setList([...list, input])\n    setInput(\"\")\n  }\n\n  const handleDelete = (i) => {\n    let tempArr = [...list]\n    tempArr.splice(i, 1)\n    setList(tempArr)\n  }\n\n  const handleEdit = (i) => {\n    let tempArr = [...list]\n    tempArr[i] = input\n    setList(tempArr)\n    setInput(\"\")\n  }\n\n\n\n\n  return (\n    <div className=\"App\">\n      {/* <button onClick={() => setList([...list,1])}></button> */}\n      <form className=\"input-wrapper\" onSubmit={handleSubmit}>\n        <input className=\"todotxt\" type=\"text\" placeholder=\"Add todo or Edit todo\" onChange={(event) => setInput(event.target.value)} value={input} />\n        {/* <button className=\"submit\" type=\"submit\" value=\"submit\" >Add Todo</button> */}\n      </form>\n      {list.map((item, i) => (\n        <div className=\"todo-element\">\n          <p>{item}</p>\n          <button onClick={() => handleDelete(i)}>Delete</button>\n          <button onClick={() => handleEdit(i)}>Edit</button>\n        </div>\n      ))}\n\n    </div>\n  )\n}\n\n\n\n// const TodoEntry = (props) => {\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}